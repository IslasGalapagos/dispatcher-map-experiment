exports[`App render drop area over the map 1`] = `
<div>
  <div
    className="map-holder">
    <Map
      animate={false}
      bounds={
        Array [
          Array [
            51.51280224425956,
            -0.11681556701660155,
          ],
          Array [
            51.50211782162702,
            -0.14428138732910156,
          ],
        ]
      }
      maxZoom={18}
      useFlyTo={false}>
      <TileLayer
        url="http://{s}.tile.osm.org/{z}/{x}/{y}.png" />
    </Map>
  </div>
  <div
    className="list-holder"
    onDragOver={[Function]}
    onDrop={[Function]} />
  <div
    className="drop-area"
    onDragEnter={[Function]}
    onDragOver={[Function]}
    onDrop={[Function]} />
</div>
`;

exports[`App render holder over the map 1`] = `
<div>
  <div
    className="map-holder">
    <Map
      animate={false}
      bounds={
        Array [
          Array [
            51.51280224425956,
            -0.11681556701660155,
          ],
          Array [
            51.50211782162702,
            -0.14428138732910156,
          ],
        ]
      }
      maxZoom={18}
      useFlyTo={false}>
      <TileLayer
        url="http://{s}.tile.osm.org/{z}/{x}/{y}.png" />
    </Map>
  </div>
  <div
    className="draggable-holder draggable-holder--undefined"
    draggable="true"
    onDragEnd={[Function]}
    onDragStart={[Function]}
    style={
      Object {
        "left": -16,
        "top": -17,
      }
    }>
    <div
      className="draggable-holder--hide"
      onClick={[Function]} />
    <div
      className="draggable-holder--name" />
    <div
      className="draggable-holder--size">
       YARDS
    </div>
    <div
      className="draggable-holder--address" />
  </div>
  <div
    className="list-holder"
    onDragOver={[Function]}
    onDrop={[Function]} />
</div>
`;

exports[`App render orders 1`] = `
<div>
  <div
    className="map-holder">
    <Map
      animate={false}
      bounds={
        Array [
          Array [
            51.51280224425956,
            -0.11681556701660155,
          ],
          Array [
            51.50211782162702,
            -0.14428138732910156,
          ],
        ]
      }
      maxZoom={18}
      useFlyTo={false}>
      <TileLayer
        url="http://{s}.tile.osm.org/{z}/{x}/{y}.png" />
      <Marker
        icon={
          NewClass {
            "_initHooksCalled": true,
            "options": Object {
              "className": "work-order-sorted-icon",
              "html": "<span>1</span>",
            },
          }
        }
        position={
          Array [
            undefined,
            undefined,
          ]
        } />
    </Map>
  </div>
  <div
    className="list-holder"
    onDragOver={[Function]}
    onDrop={[Function]}>
    <div
      className="list-holder--item list-holder--item--2"
      data-id={1}
      draggable="true"
      onDragEnd={[Function]}
      onDragStart={[Function]}>
      <div
        className="list-holder--item--name"
        data-id={1} />
      <div
        className="list-holder--item--size"
        data-id={1}>
         YARDS
      </div>
      <div
        className="list-holder--item--address"
        data-id={1}>
        3
      </div>
    </div>
  </div>
</div>
`;

exports[`App render points 1`] = `
<div>
  <div
    className="map-holder">
    <Map
      animate={false}
      bounds={
        Array [
          Array [
            51.51280224425956,
            -0.11681556701660155,
          ],
          Array [
            51.50211782162702,
            -0.14428138732910156,
          ],
        ]
      }
      maxZoom={18}
      useFlyTo={false}>
      <TileLayer
        url="http://{s}.tile.osm.org/{z}/{x}/{y}.png" />
      <MarkerClusterGroup
        markers={
          Array [
            Object {
              "lat": 1,
              "lng": 2,
            },
          ]
        }
        wrapperOptions={Object {}} />
      <Marker
        icon={
          NewClass {
            "_initHooksCalled": true,
            "options": Object {
              "className": "work-order-sorted-icon",
              "html": "<span>1</span>",
            },
          }
        }
        position={
          Array [
            3,
            4,
          ]
        } />
      <Marker
        icon={
          NewClass {
            "_initHooksCalled": true,
            "options": Object {
              "className": "work-order-sorted-icon",
              "html": "<span>2</span>",
            },
          }
        }
        position={
          Array [
            5,
            6,
          ]
        } />
      <Polyline
        color="#444"
        positions={
          Array [
            Array [
              3,
              4,
            ],
            Array [
              5,
              6,
            ],
          ]
        } />
    </Map>
  </div>
  <div
    className="list-holder"
    onDragOver={[Function]}
    onDrop={[Function]}>
    <div
      className="list-holder--item list-holder--item--undefined"
      data-id={10}
      draggable="true"
      onDragStart={[Function]}>
      <div
        className="list-holder--item--name"
        data-id={10} />
      <div
        className="list-holder--item--size"
        data-id={10}>
         YARDS
      </div>
      <div
        className="list-holder--item--address"
        data-id={10} />
    </div>
    <div
      className="list-holder--item list-holder--item--undefined"
      data-id={20}
      draggable="true"
      onDragStart={[Function]}>
      <div
        className="list-holder--item--name"
        data-id={20} />
      <div
        className="list-holder--item--size"
        data-id={20}>
         YARDS
      </div>
      <div
        className="list-holder--item--address"
        data-id={20} />
    </div>
  </div>
</div>
`;

exports[`mapActions moveOutList 1`] = `
Array [
  Object {
    "data": "data",
    "type": "list->moveOut",
  },
]
`;

exports[`mapActions moveToList 1`] = `
Array [
  Object {
    "data": "data",
    "type": "list->move",
  },
]
`;

exports[`mapActions pointerOut 1`] = `
Array [
  Object {
    "type": "holder->hide",
  },
]
`;

exports[`mapActions pointerOver 1`] = `
Array [
  Object {
    "data": Object {
      "address": 3,
      "id": 1,
      "name": undefined,
      "size": 4,
      "type": 2,
    },
    "rect": "RECT",
    "type": "holder->show",
  },
]
`;

exports[`mapActions reorder 1`] = `
Array [
  Object {
    "draggedId": 245,
    "targetId": 1000,
    "type": "list->reorder",
  },
]
`;

exports[`mapActions reorder 2`] = `
Array [
  Object {
    "draggedId": 345,
    "targetId": 2000,
    "type": "list->reorder",
  },
]
`;

exports[`mapActions reorder 3`] = `
Array [
  Object {
    "draggedId": NaN,
    "targetId": 3000,
    "type": "list->reorder",
  },
]
`;

exports[`mapActions startMoveOutList 1`] = `
Array [
  Object {
    "order": "order",
    "type": "list->moveStart",
  },
]
`;

exports[`mapActions stopMoveOutList 1`] = `
Array [
  Object {
    "type": "list->moveStop",
  },
]
`;

exports[`test mapState 1`] = `
Object {
  "dropArea": 2,
  "holder": 1,
  "orders": 3,
  "points": Array [],
}
`;

exports[`test mapState 2`] = `
Object {
  "dropArea": undefined,
  "holder": undefined,
  "orders": undefined,
  "points": 1,
}
`;
